# name: test/sql/test_advanced_features.test
# group: [infera]

# tests advanced features like remote model loading and blob inputs.

statement ok
pragma enable_verification

# load the infera extension from the local build artifact
statement ok
load 'build/release/extension/infera/infera.duckdb_extension'

# test 1: remote model loading

statement ok
create or replace macro model_name() as 'remote_linear_model'

statement ok
create or replace macro model_url() as 'https://github.com/CogitatorTech/infera/raw/refs/heads/main/test/models/linear.onnx'

statement ok
select infera_load_model(model_name(), model_url())

query I
select instr(infera_get_loaded_models(), model_name()) > 0
----
true

# run a prediction to confirm it's functional (y = 1.75 for these features)
query I
select abs(infera_predict(model_name(), 1.0, 2.0, 3.0) - 1.75) < 1e-5
----
true

statement ok
select infera_unload_model(model_name())

query I
select instr(infera_get_loaded_models(), model_name()) = 0
----
true

# test 2: blob input prediction

statement ok
select infera_load_model('mobilenet', 'https://huggingface.co/onnxmodelzoo/tf_mobilenetv3_small_075_Opset17/resolve/main/tf_mobilenetv3_small_075_Opset17.onnx')

# test error handling with an incorrectly sized blob (explicit blob cast)
statement error
select infera_predict_from_blob('mobilenet', cast('dummy_bytes' as blob))
----
Invalid Input Error: Inference failed for model 'mobilenet': Invalid BLOB size: length must be a multiple of 4

# test with a correctly sized, zero-filled blob
# model input is 1*224*224*3 floats. a float is 4 bytes. total size = 602112 bytes
query I
with const as (
  select cast(repeat(chr(0), 602112) as blob) as zero_blob
)
select len(infera_predict_from_blob('mobilenet', zero_blob)) > 0
from const
----
true

statement ok
select infera_unload_model('mobilenet')
